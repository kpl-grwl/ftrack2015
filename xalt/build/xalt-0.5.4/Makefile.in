#-----------------------------------------------------------------------
# XALT: A tool that tracks users jobs and environments on a cluster.
# Copyright (C) 2013-2014 University of Texas at Austin
# Copyright (C) 2013-2014 University of Tennessee
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of 
# the License, or (at your option) any later version. 
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser  General Public License for more details. 
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330,
# Boston, MA 02111-1307 USA
#-----------------------------------------------------------------------

PATH_TO_SRC       := @PATH_TO_SRC@
path_to_src       := PATH_TO_SRC
ifeq ($(PATH_TO_SRC),@$(path_to_src)@)
  PATH_TO_SRC     := .
endif
CURRENT_MK        := $(lastword $(MAKEFILE_LIST))

package           := xalt
VERSION           := $(shell cat $(PATH_TO_SRC)/.version)
TRANSMISSION      := @TRANSMISSION@
SITE_NAME         := @SITE@
ETC_DIR           := @ETC_DIR@
prefix            := @prefix@
XALT_DIR          := $(prefix)
HAVE_PYMOD_PSUTIL := @HAVE_PYMOD_PSUTIL@
PATH_TO_UUIDGEN   := @PATH_TO_UUIDGEN@
PATH_TO_PYTHON    := @PATH_TO_PYTHON@
PATH_TO_RM        := @PATH_TO_RM@
PATH_TO_CAT       := @PATH_TO_CAT@
PATH_TO_MKDIR     := @PATH_TO_MKDIR@
PATH_TO_AS        := @PATH_TO_AS@
PATH_TO_BASENAME  := @PATH_TO_BASENAME@
PATH_TO_READLINK  := @PATH_TO_READLINK@
PATH_TO_DIRNAME   := @PATH_TO_DIRNAME@
PATH_TO_HEAD      := @PATH_TO_HEAD@
PATH_TO_GREP      := @PATH_TO_GREP@
PATH_TO_PSTREE    := @PATH_TO_PSTREE@
BUILD_PSTREE      := @BUILD_PSTREE@
USE_ARGPARSE      := @USE_CONTRIB_ARGPARSE@

GIT_PROG          := @PATH_TO_GIT@
GIT_VERSION       := $(shell if [ -n "$(GIT_PROG)" -a -d .git ]; then GV=`git describe --always`; echo "$$GV"; else echo "@git@"; fi)

LIBEXEC           := $(prefix)/libexec
SITE              := $(prefix)/site
BIN               := $(prefix)/bin
SBIN              := $(prefix)/sbin
DIRLIST           := $(DESTDIR)$(LIBEXEC) $(DESTDIR)$(SITE)  $(DESTDIR)$(BIN) \
                     $(DESTDIR)$(SBIN) $(DESTDIR)$(ETC_DIR)

BIN_PKG           := src/ld.in src/mpirun.in src/mpiexec.in src/ibrun.in                \
                     src/ibrun.symm.in src/aprun.in src/srun.in                         \
                     src/mpirun.lsf.in src/xalt_helper_functions.sh                     \
                     src/monthly_report.in
BIN_PKG           := $(patsubst %, $(PATH_TO_SRC)/%, $(BIN_PKG))

SBIN_PKG          := src/conf_create.in.py  	       src/createDB.in.py               \
                     src/xalt_db.conf                  src/xalt_file_to_db.in.py        \
                     src/xalt_syslog_to_db.in.py
SBIN_PKG          := $(patsubst %, $(PATH_TO_SRC)/%, $(SBIN_PKG))

LIBEXEC_PKG       := src/xalt_generate_assembly.py     src/xalt_generate_linkdata.py    \
                     src/xalt_run_submission.py        src/xalt_parse_mpirun_args.py    \
                     src/xalt_util.py                  src/XALTdb.py                    \
                     src/progressBar.py                src/xalt_epoch.py                \
                     src/xalt_working_python.py        src/xalt_transmission_factory.py \
                     src/xalt_stack.py                 src/XALT_Rmap.py                 \
                     src/xalt_global.py
LIBEXEC_PKG       := $(patsubst %, $(PATH_TO_SRC)/%, $(LIBEXEC_PKG))

SITE_PKG          := src/xalt_find_exec_hydra.py       src/xalt_find_exec_openmpi.py    \
	             src/xalt_which_mpi.in             src/xalt_syshost_$(SITE_NAME).py \
                     src/new_job_id.in.py              src/xalt_site_pkg.py             \
		     src/xalt_find_exec_ibrun.py       src/xalt_find_exec_aprun.py      \
		     src/xalt_find_exec_sgimpt.py      src/xalt_find_exec_srun.py       \
                     src/xalt_find_exec_ncar.py
SITE_PKG          := $(patsubst %, $(PATH_TO_SRC)/%, $(SITE_PKG))

.PHONY:

all:
	@echo done

install:  $(DIRLIST) Inst_site Inst_sbin Inst_bin Inst_libexec \
          Use_getent_yes Use_argparse_$(USE_ARGPARSE)          \
          Build_pstree_$(BUILD_PSTREE)



echo:
	@echo CURDIR: $(CURDIR)
	@echo PATH_TO_SRC: $(PATH_TO_SRC)
	@echo SITE_PKG: $(SITE_PKG)
	@echo MAKE: $(MAKE)
	@echo MAKEFLAGS: $(MAKEFLAGS)
	@echo MAKEFILE_LIST: $(MAKEFILE_LIST)

$(DIRLIST) :
	mkdir -p $@

Inst_site: $(SITE_PKG)
	$(MAKE) $(MAKEFLAGS) -f $(CURRENT_MK) FILELIST="$^" DIRLOC=$(DESTDIR)$(SITE)    __installMe

Inst_libexec: $(LIBEXEC_PKG)
	$(MAKE) $(MAKEFLAGS) -f $(CURRENT_MK) FILELIST="$^" DIRLOC=$(DESTDIR)$(LIBEXEC) __installMe

Inst_sbin: $(SBIN_PKG)
	$(MAKE) $(MAKEFLAGS) -f $(CURRENT_MK) FILELIST="$^" DIRLOC=$(DESTDIR)$(SBIN)    __installMe

Inst_bin: $(BIN_PKG)
	$(MAKE) $(MAKEFLAGS) -f $(CURRENT_MK) FILELIST="$^" DIRLOC=$(DESTDIR)$(BIN)     __installMe

Build_pstree_no:

Build_pstree_yes:
	cd contrib;                                                       \
        tar xf psmisc-22.21.tar.gz;                                       \
        cd psmisc-22.21;                                                  \
        ./configure --prefix=$(prefix)/psmisc;                            \
        make CFLAGS="-g -O0";                                             \
        make DESTDIR=$(DESTDIR) install;                                  \
        ln -s $(prefix)/psmisc/bin/pstree $(DESTDIR)$(prefix)/libexec;    \
	cd ..; rm -rf psmisc-22.21

Use_getent_yes:
	cd $(PATH_TO_SRC)/contrib;                                        \
        mkdir -p  $(DESTDIR)$(prefix)/libexec/getent;                     \
        cp getent/*.py $(DESTDIR)$(prefix)/libexec/getent


Use_argparse_no:

Use_argparse_yes: $(PATH_TO_SRC)/contrib/argparse/argparse.py
	$(MAKE) $(MAKEFLAGS) -f $(CURRENT_MK) FILELIST="$^" DIRLOC=$(DESTDIR)$(LIBEXEC) __installMe

__installMe:
	-for i in $(FILELIST); do                                     	   \
           bareN=$${i##*/};                                           	   \
           fn=$${bareN%%.in*};                                        	   \
	   ext=$${bareN#$$fn.}                                             \
           oext=;                                                          \
	   : echo "bareN: $$bareN, ext: $$ext";                            \
           [ "$$ext" = "in.py" ] && oext=".py";                            \
           sed  -e 's|@PREFIX@|$(prefix)|g'                            	   \
	        -e 's|@xalt_dir@|$(XALT_DIR)|g'                 	   \
	        -e 's|@xalt_libexec_dir@|$(LIBEXEC)|g'                     \
	        -e 's|@xalt_site_dir@|$(SITE)|g'                           \
	        -e 's|@site_name@|$(SITE_NAME)|g'                          \
	        -e 's|@path_to_rm@|$(PATH_TO_RM)|g'                        \
	        -e 's|@path_to_as@|$(PATH_TO_AS)|g'                        \
	        -e 's|@path_to_basename@|$(PATH_TO_BASENAME)|g'            \
	        -e 's|@path_to_readlink@|$(PATH_TO_READLINK)|g'            \
	        -e 's|@path_to_dirname@|$(PATH_TO_DIRNAME)|g'              \
	        -e 's|@path_to_cat@|$(PATH_TO_CAT)|g'                      \
	        -e 's|@path_to_mkdir@|$(PATH_TO_MKDIR)|g'                  \
	        -e 's|@transmission@|$(TRANSMISSION)|g'                    \
                -e 's|@have_pymod_psutil@|$(HAVE_PYMOD_PSUTIL)|g'          \
	        -e 's|@etc_dir@|$(ETC_DIR)|g'                              \
	        -e 's|@python@|$(PATH_TO_PYTHON)|g'                        \
	        -e 's|@head@|$(PATH_TO_HEAD)|g'                            \
	        -e 's|@grep@|$(PATH_TO_GREP)|g'                            \
	        -e 's|@version@|$(VERSION)|g'                              \
	        -e 's|@git@|$(GIT_VERSION)|g'                              \
	        -e 's|@path_to_pstree@|$(PATH_TO_PSTREE)|g'                \
	        -e 's|@path_to_uuidgen@|$(PATH_TO_UUIDGEN)|g'              \
                           < $$i > $(DIRLOC)/$$fn$$oext;                   \
            [ "$$ext" = "in" -o "$$ext" = "in.py" ] && \
               chmod +x $(DIRLOC)/$$fn$$oext;                              \
	    true;                                                          \
        done

world_update:
	@git status -s > /tmp/git_st_$$$$;                                 \
        if [ -s /tmp/git_st_$$$$ ]; then                                   \
            echo "All files not checked in => try again";                  \
        else                                                               \
            git push github;                                               \
            git push --tags github;                                        \
        fi;                                                                \
        rm -f /tmp/git_st_$$$$

gittag:
        ifneq ($(TAG),)
	  @git status -s > /tmp/git_st_$$$$;                               \
          if [ -s /tmp/git_st_$$$$ ]; then                                 \
	    echo "All files not checked in => try again";                  \
	  else                                                             \
	    echo "$(TAG)" >                                      .version; \
            git commit -m "moving to TAG_VERSION $(TAG)"         .version; \
            git tag -a $(TAG) -m 'Setting TAG_VERSION to $(TAG)'         ; \
	    git push --tags                                              ; \
          fi;                                                              \
          rm -f /tmp/git_st_$$$$
        else
	  @echo "To git tag do: make gittag TAG=?"
        endif

tags:
	find . \( -regex '.*~$$\|.*/\.git\|.*/\.git/' -prune \)  \
               -o -type f > file_list.1
	sed -e 's|.*/.git.*||g'                                  \
            -e 's|.*/rt/.*/t1/.*||g'                             \
            -e 's|./TAGS||g'                                     \
            -e 's|.*/epydoc/.*$$||g'                             \
            -e 's|./makefile||g'                                 \
            -e 's|./configure$$||g'                              \
            -e 's|.*/.DS_Store$$||g'                             \
            -e 's|.DS_Store$$||g'                                \
            -e 's|.*\.tgz$$||g'                                  \
            -e 's|.*\.tar\.gz$$||g'                              \
            -e 's|.*\.tar\.bz2$$||g'                             \
            -e 's|.*\.pyc$$||g'                                  \
            -e 's|.*\.pyo$$||g'                                  \
            -e 's|.*\.csv$$||g'                                  \
	    -e 's|.*\.aux$$||g'                                  \
	    -e 's|.*\.fdb_latexmk$$||g'                          \
	    -e 's|.*\.fls$$||g'                                  \
	    -e 's|.*\.key$$||g'                                  \
	    -e 's|.*\.nav$$||g'                                  \
	    -e 's|.*\.out$$||g'                                  \
	    -e 's|.*\.pdf$$||g'                                  \
	    -e 's|.*\.snm$$||g'                                  \
	    -e 's|.*\.toc$$||g'                                  \
	    -e 's|.*\.vrb$$||g'                                  \
	    -e 's|.*syslogTest$$||g'                             \
            -e 's|^#.*||g'                                       \
            -e 's|/#.*||g'                                       \
            -e 's|\.#.*||g'                                      \
            -e 's|.*\.pdf$$||g'                                  \
            -e 's|.*\.used$$||g'                                 \
            -e 's|./.*\.log$$||g'                                \
            -e 's|./testreports/.*||g'                           \
            -e 's|./config\.status$$||g'                         \
            -e 's|.*\~$$||g'                                     \
            -e 's|./file_list\..*||g'                            \
            -e '/^\s*$$/d'                                       \
	       < file_list.1 > file_list.2
	etags  `cat file_list.2`
	$(RM) file_list.*

dist:
	git archive --prefix=xalt-$(VERSION)/ master > xalt-$(VERSION).tar
	$(RM) -rf DIST;                                                 	   \
	mkdir DIST;                                                     	   \
        cd DIST;                                                        	   \
        tar xf ../xalt-$(VERSION).tar;                                             \
	perl -pi -e 's/\@git\@/$(GIT_VERSION)/g' $$(find xalt-$(VERSION) -type f); \
        $(RM) ../xalt-$(VERSION).tar;                                    	   \
	tar cjf ../xalt-$(VERSION).tar.bz2   xalt-$(VERSION);           	   \
	cd ..; $(RM) -rf DIST

makefile: $(PATH_TO_SRC)/Makefile.in $(PATH_TO_SRC)/config.status
	$(PATH_TO_SRC)/config.status $@
